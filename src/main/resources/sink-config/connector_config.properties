#tablekey : Entity Class
#---JPA-----
#passenger:com.solace.connectors.database.sink.entity.Passenger
#customer:com.solace.connectors.database.sink.entity.Customer
#address:com.solace.connectors.database.sink.entity.Address

#dxb/create/order/>:order
#dxb/passengers/col/contact_no/*/name=passenger

#test/topic/customer:customer

##-------SQL---------
passenger:passenger
#address:address
#customer:customer

DB_CONNECTOR_TIMESTAMP_FORMAT=yyyy/dd/MM.HH:mm:ss
#BASE64 or HEX
DB_CONNECTOR_BLOB_ENCODING=BASE64
DB_MSG_HEADER_TIMESTAMP_FORMAT=yyyy/dd/MM HH:mm:ss.SSS
MESSAGE_HEADER_TRACK_ID=passenger.day

#entities_customer=customer
#entities_customer_child=address
###jpa
#dxb/pass/insert/*=passenger
#dxb/pass/update/*=passenger
#dxb/pass/delete/*=passenger.delete

##SQL
dxb/pass/insert/*=passenger.insert
dxb/pass/update/*=passenger.update
dxb/pass/delete/*=passenger.delete
passenger.insert.sql=insert into BEST.Z_SKP_ORDERS(ORDER_ID,PRD,DESCRIPTION) values(?,?,?)
#passenger.update.sql=update passenger set name=?,address=?,nationality=?,contact_no=? where passenger_id=?
#passenger.delete.sql=delete from passenger where passenger_id=?

#customer.sql=insert into customer (customer_id,first_name,LAST_NAME,DBTIME) values(:CUSTOMER_ID,:FIRST_NAME,:LAST_NAME,:DBTIME)
#address.sql=insert into address ( city,customer_number,street,address_id ) values (:CITY,:CUSTOMER_NUMBER,:STREET,:ADDRESS_ID )

#sequenceId, current_timestamp-last_timestamp(last read timestamp of the record){offset value}