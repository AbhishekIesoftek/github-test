customer=com.solace.connector.db.pull.entity.Customer
source_passenger=com.solace.connector.db.pull.entity.SourcePassenger
passAddress=com.solace.connector.db.pull.entity.PassAddress

DB_TABLE=source_passenger
#--------------------source_passenger--------------

source_passenger.BINDING=output-0
source_passenger.TOPIC=dxb/source_passenger
source_passenger.LVQ_TOPIC=lvq/source_passenger
source_passenger.DB_TABLE=source_passenger
source_passenger.DB_PARENT_KEY=passengerId
source_passenger.DB_PARENT_COLLECTION=addresses
source_passenger.DB_CHILD_TABLE=passAddress
source_passenger.DB_CHILD_KEY=passId
source_passenger.DB_READ_INDICATOR_COLUMN=flag
source_passenger.DB_TRACKING_ID=dbtrackid
source_passenger.DB_READ_TIME=readtime
# blr_baggages_hc_address=bbcROad
source_passenger.DB_READ_INDICATOR_COLUMN_UPDATE_VALUE_INPROGRESS=p
source_passenger.DB_READ_INDICATOR_COLUMN_UPDATE_VALUE_PROCESSED=c
source_passenger.DB_READ_INDICATOR_COLUMN_DEFAULT_VALUE=n
source_passenger.DB_READ_INDICATOR_COLUMN_FAILED_VALUE=f
source_passenger.DB_READ_RECORD_SEQUENTIAL_INDICATOR=id.passengerId
source_passenger.DB_READ_RECORD_SEQUENTIAL_ORDER=asc
#if true, it will read the failed ones after starting the connector, if failed, it will ignore the failed one.
source_passenger.DB_READ_INDICATOR_BRIDGE_FAILED_VALUE=true
##message heasers
source_passenger.MESSAGE_HEADER_TRACK_ID=dbtrackid
#MESSAGE_HEADER_CREATE_TIME=createTime
#IS_TEST=true
#--------------------END--------------


